<?php
/**
 * Tweakwise & Emico (https://www.tweakwise.com/ & https://www.emico.nl/) - All Rights Reserved
 *
 * @copyright Copyright (c) 2017-2022 Tweakwise.com B.V. (https://www.tweakwise.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

declare(strict_types=1);

use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;
use Magento\Search\Helper\Data as SearchHelper;

// phpcs:disable Magento2.Templates.ThisInTemplate.FoundHelper

/** @var Escaper $escaper */
/** @var Template $block */
/** @var SearchHelper $helper */

$helper = $this->helper(SearchHelper::class);

?>
<script>
    'use strict';

    function tweakwiseQuickSearch() {
        return {
            minSearchLength: 3,
            suggestions: [],
            close() {
                this.suggestions = []
            },
            suggest() {
                const term = this.$refs.searchInput.value
                if (term.length >= this.minSearchLength) {
                    this.fetchSuggestions(term)
                } else {
                    this.suggestions = []
                }
            },
            fetchSuggestions(term) {
                fetch(
                    window.BASE_URL + 'search/ajax/suggest?' + new URLSearchParams({q: term}),
                    {
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    }
                )
                    .then(response => response.json())
                    .then(result => this.suggestions = result)
            },
            clickSuggestion(suggestion) {
                if (suggestion.type === 'suggestion_group') {
                    return
                } else if (suggestion.type === 'product') {
                    this.goToProduct(suggestion.url)
                } else if (suggestion.url) {
                    this.goToProduct(suggestion.url)
                } else {
                    this.search(suggestion.title)
                }
            },
            search(term) {
                this.$refs.searchInput.value = term;
                document.getElementById('search_mini_form').submit()
            },
            goToProduct(url) {
                window.location.href = url
            },
            focusElement(element) {
                if (element && element.nodeName === 'DIV') {
                    element.focus()
                    this.$refs.searchInput.value = element.getAttribute('data-title')
                    return true
                } else {
                    return false
                }
            },
            hasSpecialPrice(suggestion) {
                return (Math.abs(suggestion.final_price - suggestion.price) > 0.0001)
            },
            formatPrice(price) {
                return hyva.formatPrice(price, false)
            }
        }
    }
</script>
<div class="container py-2 mx-auto text-black" x-data="tweakwiseQuickSearch()">
    <form class="form minisearch relative" id="search_mini_form"
          action="<?=$escaper->escapeUrl($helper->getResultUrl())?>" method="get">
        <label class="hidden" for="search" data-role="minisearch-label">
            <span><?=$escaper->escapeHtml(__('Search'))?></span>
        </label>
        <input id="search"
               x-ref="searchInput"
               type="search"
               autocomplete="off"
               name="<?=$escaper->escapeHtmlAttr($helper->getQueryParamName())?>"
               value="<?=$escaper->escapeHtmlAttr($helper->getEscapedQueryText())?>"
               placeholder="<?=$escaper->escapeHtmlAttr(__('Search entire store here...'))?>"
               maxlength="<?=$escaper->escapeHtmlAttr($helper->getMaxQueryLength())?>"
               class="w-full p-2 text-lg leading-normal transition appearance-none text-grey-800
                focus:outline-none focus:border-transparent lg:text-xl"
               @focus.once="suggest"
               @input.debounce.300="suggest"
               @click.outside="close"
               @keydown.arrow-down.prevent="focusElement($root.querySelector('[tabindex]'))"
        />
        <?=$block->getChildHtml('tweakwise.quick.search');?>
        <button type="submit"
                title="<?=$escaper->escapeHtml(__('Search'))?>"
                class="action search sr-only"
                aria-label="Search"
        >
            <?=$escaper->escapeHtml(__('Search'))?>
        </button>
    </form>
</div>
